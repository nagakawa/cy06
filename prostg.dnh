#include "./procon.dnh"

// STG FRAME:
// top-left (16, 16)
// dimensions 468x568

function getPower {
	return GetCommonData("Power", 0);
}

task setPower(p) {
	SetCommonData("Power", p);
}

function createStraightLaserA1(x, y, angle, len, width, deleteTime, graphicId, delay) {
	let l = CreateStraightLaserA1(x, y, angle, len, width, deleteTime, graphicId, delay);
	ObjLaser_SetGrazeInvalidFrame(l, 3);
	return l;
}

function createLooseLaserA1(x, y, speed, angle, len, width, graphicId, delay) {
	let l = CreateLooseLaserA1(x, y, speed, angle, len, width, graphicId, delay);
	ObjLaser_SetGrazeInvalidFrame(l, 3);
	return l;
}

function createCurveLaserA1(x, y, speed, angle, len, width, graphicId, delay) {
	let l = CreateCurveLaserA1(x, y, speed, angle, len, width, graphicId, delay);
	ObjLaser_SetGrazeInvalidFrame(l, 3);
	return l;
}

function getRadius {
	return GetCommonData("Radius", 5);
}

task setRadius(p) {
	SetCommonData("Radius", p);
}

function getValue {
	return GetCommonData("Value", 0.01);
}

task setValue(p) {
	SetCommonData("Value", p);
}

function getTrancePercentage {
	return GetCommonData("Trance", 0);
}

task setTrancePercentage(p) {
	SetCommonData("Trance", p);
}

task addTrancePercentage(p) {
	setTrancePercentage(getTrancePercentage + p);
}

function isTranceActive {
	return GetCommonData("IsTrance", false);
}

task activateTrance(active) {
	SetCommonData("IsTrance", active);
}

task hitbox {
	let path = GetCurrentScriptDirectory ~ "resource/hurtbox.png";
	let pathc = GetCurrentScriptDirectory ~ "resource/hurtbox_center.png";
	let obj = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(obj, path);
	ObjSprite2D_SetSourceRect(obj, 0, 0, 41, 41);
	ObjSprite2D_SetDestCenter(obj);
	let objc = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objc, pathc);
	ObjSprite2D_SetSourceRect(objc, 0, 0, 7, 7);
	ObjSprite2D_SetDestCenter(objc);
	let t = 0;
	loop {
		ObjRender_SetPosition(obj, GetPlayerX, GetPlayerY, 0);
		ObjRender_SetPosition(objc, GetPlayerX, GetPlayerY, 0);
		ObjRender_SetAngleXYZ(obj, 0, 0, t);
		let showHitbox = isFocused && !isHidden && (GetPlayerState == STATE_NORMAL);
		Obj_SetVisible(obj, showHitbox);
		Obj_SetVisible(objc, showHitbox);
		t += 3;
		yield;
	}
}

function createItemU1(type, x, y) {
	let i = CreateItemU1(type, x, y, 0);
	ObjItem_SetRenderScoreEnable(i, false);
	return i;
}