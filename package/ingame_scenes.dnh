function TEndScene(mode, rpSlot, difficulty, character) {
	task goBack {
		if (mode >= MODE_SPELL) {SetCommonData("inSP", false);}
	}
	/*if (IsReplay) {
		playBGM(0);
		return false;
	}*/
	//RenderToTextureA1("TB", 0, 100, true);
	FinalizeStageScene;
	let dir = GetCurrentScriptDirectory;
	let pathScript = dir ~ "../system/end_scene.dnh";
	let idScript = LoadScript(pathScript);
	StartScript(idScript);
	while (!IsCloseScript(idScript)) {
		yield;
	}
	let res = GetScriptResult(idScript);
	alternative (res)
	case (RESULT_SAVE_REPLAY) {
		TReplaySaveScene(difficulty, character, mode);
		goBack;
		return TEndScene(mode, rpSlot, difficulty, character);
	}
	case (RESULT_END) {
		//if (mode < MODE_SPELL) {titleScene(false);}
		goBack;
	}
	case (RESULT_RETRY) {
		if (mode == MODE_ALL) {
			startMe(rpSlot, difficulty, character, MODE_ALL, 1, 6);
			main;
		}
		else if (mode < MODE_SPELL) {
			startMe(rpSlot, difficulty, character, mode, mode, mode);
			main;
		}
		else {
			let spell = mode - MODE_SPELL;
			startMe(rpSlot, difficulty, character, spell, 0, 0);
			main;
		}
		return true;
	}
	playBGM(0);
	return false;
}

function RunPauseScene {
	if (GetCommonData("pauseblocked", false)) {return;}
	RenderToTextureA1("TB", 0, 100, true);
	let dir = GetCurrentScriptDirectory;
	let pathScript = dir ~ "../system/pause.dnh";
	let idScript = LoadScript(pathScript);
	StartScript(idScript);
	while (!IsCloseScript(idScript)) {
		yield;
	}
	PauseStageScene(false);
	let res = GetScriptResult(idScript);
	return res;
}

function TReplaySaveScene(difficulty, character, mode) {
	let dir = GetCurrentScriptDirectory;
	let pathScript = dir ~ "../system/system_replay_save.dnh";
	let idScript = LoadScript(pathScript);
	SetScriptArgument(idScript, 0, IntToString(difficulty) ~ "|" ~ IntToString(character) ~ "|" ~ IntToString(mode));
	StartScript(idScript);
	while (!IsCloseScript(idScript)) {
		yield;
	}
	/*if (mode < MODE_SPELL) {
		titleScene(false);
		unfreeze;
	}*/
}