#include "../propkg.dnh"
#include "../system/rpm_text.dnh"
#include "../itsbloc.dnh"

let selected = 0;
let textObjs = [];
let frames = 0;
let ended = false;

@Initialize {
	main;
}

task itemTask(text, i) {
	while (exists(text)) {
		let b = [255, 128][i == selected];
		ObjText_SetFontColorTop(text, 255, 255, b);
		ObjText_SetFontColorBottom(text, 255, 255, b);
		yield;
	}
}

function stageName(n) {
	if (n == 7) { return S("ex"); }
	if (n == 8) { return S("ph"); }
	return IntToString(n) ~ " ";
}

task main {
	let prefix = S("menu.stagePrefix");
	let suffix = S("menu.stageSuffix");
	let stages = GetScriptArgument(0);
	let scores = GetScriptArgument(1);
	let itemCount = length(stages);
	let difficulty = GetScriptArgument(2)[0];
	let character = GetScriptArgument(2)[1];
	ascent (i in 0 .. itemCount) {
		let title = createTextR(
			prefix ~ stageName(stages[i]) ~ suffix ~
				vtos("14s", IntToStringIL(scores[i])),
			500, 150 + 25 * i
		);
		itemTask(title, i);
		textObjs = textObjs ~ [title];
	}
	flushZ;
	let frames = 0;
	loop {
		let up = GetVirtualKeyState(VK_UP);
		let down = GetVirtualKeyState(VK_DOWN);
		let old = selected;
		if (up == KEY_PUSH) {selected--;}
		else if (down == KEY_PUSH) {selected++;}
		else if (up == KEY_HOLD) {
			frames++;
			if (frames >= 30 && (frames % 10 == 0)) {selected--;}
		}
		else if (down == KEY_HOLD) {
			frames++;
			if (frames >= 30 && (frames % 10 == 0)) {selected++;}
		}
		else { frames = 0; }
		if (selected < 0) {selected = itemCount - 1;}
		else if (selected >= itemCount) {selected = 0;}
		if (GetVirtualKeyState(VK_OK) == KEY_PUSH) {
			SetScriptResult(stages[selected]);
			flushZ;
			finalize;
			return;
		}
		else if (GetVirtualKeyState(VK_CANCEL) == KEY_PUSH) {
			SetScriptResult(-1);
			flushX;
			finalize;
			return;
		}
		yield;
	}
}

@Event {
	
}

@MainLoop {
	yield;
}

task finalize {
	SaveCommonDataAreaA1("Cy06");
	let l = length(textObjs);
	ascent (i in 0 .. l) {
		Obj_Delete(textObjs[i]);
	}
	CloseScript(GetOwnScriptID);
}
