#include "./spell_header.dnh"
#include "./sp_ceri.dnh"

let level = 1;
let id = 2;

@Event {
	alternative (GetEventType)
	case (EV_REQUEST_LIFE) {
		SetScriptResult(6000);
	}
	case (EV_REQUEST_TIMER) {
		SetScriptResult(48);
	}
}

task laserTask(l) {
	while (ObjMove_GetY(l) > 0) {
		if (nexists(l)) { return; }
		yield;
	}
	let x = ObjMove_GetX(l);
	let n = truncate(3 + 0.8 * getRank);
	let d = truncate(12 + 2 * getRank);
	ascent (i in 0 .. n) {
		if (nexists(l)) { return; }
		let speed = 1 + 0.35 * getRank;
		loop (d) {
			let a = rand(0, 180);
			CreateShotB2(
				x, 0,
				speed * cos(a), speed * sin(a),
				0, 0.05,
				speed, speed * 1.5,
				BALL_S_RED,
				15
			);
		}
		explosionShort;
		wait(15);
	}
}

task shootLaser(angle) {
	let l = createLooseLaserA1(
		ObjMove_GetX(objBoss), ObjMove_GetY(objBoss),
		1.2, angle,
		100, 10,
		BEAM_RED, 30
	);
	laserTask(l);
}

task easyNormalHard {
	ObjMove_SetDestAtFrame(objBoss, GetStgFrameWidth / 2, 150, 60);
	wait(60);
	while (!isDead) {
		shootLaser(-60);
		shootLaser(-120);
		wait(120);
	}
}

function moveWithDelayLaser(x, y, a, i) {
	if (isDead) { return; }
	let x0 = ObjMove_GetX(objBoss);
	let y0 = ObjMove_GetY(objBoss);
	let dist = getDistanceTwoPoints(x0, y0, x, y);
	let delay = max(20, 30 - i);
	delayLaser(
		x0, y0,
		getAngleTwoPoints(x0, y0, x, y),
		dist, 20,
		delay, BEAM_LIME, delay
	);
	wait(delay);
	if (isDead) { return; }
	ObjMove_SetDestAtSpeed(objBoss, x, y, 6);
	shotSound;
	wait(dist / 6);
	if (isDead) { return; }
	explosionLong;
	let n = truncate(20 + 4 * getRank);
	let s = randomSign;
	loop (n) {
		CreateShotOA1(objBoss, 2, a, RICE_M_RED, 30);
		a += s * 120 / n;
		CreateShotOA1(objBoss, 1.8, a, RICE_M_RED, 30);
		a += s * 120 / n;
		CreateShotOA1(objBoss, 1.6, a, RICE_M_RED, 30);
		a += s * 120 / n;
	}
	CreateLooseLaserA1(
		x, y,
		2.4,
		(GetAngleToPlayer(objBoss) + a + rand(-90, 90)) / 2,
		180, 15,
		BEAM_YELLOW,
		30
	);
}

task veryHardIntense {
	let cx = GetStgFrameWidth / 2;
	let cy = GetStgFrameHeight / 2;
	let i = 0;
	while (!isDead) {
		moveWithDelayLaser(cx * rand(0.75, 1.25), 0, 90, i);
		moveWithDelayLaser(0, cy * rand(0.75, 1.25), 0, i);
		moveWithDelayLaser(cx * rand(0.75, 1.25), cy * 2, 270, i);
		moveWithDelayLaser(cx * 2, cy * rand(0.75, 1.25), 180, i);
		ObjMove_SetDestAtFrame(objBoss, cx, cy / 2, 30);
		wait(30);
		ascent (i in 0 .. 5) {
			let n = truncate(20 + 4 * getRank + 0.3 * i);
			let a = rand(0, 360);
			loop (n) {
				CreateShotOA1(objBoss, 1.8 + 0.2 * i, a, RICE_M_YELLOW, 30);
				a += 360 / n;
			}
			wait(20);
		}
		wait(50);
	}
}

task TWork {
	if (getDifficulty < 3) { easyNormalHard; }
	else { veryHardIntense; }
}